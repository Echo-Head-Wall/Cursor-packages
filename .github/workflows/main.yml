name: Convert AppImage to .deb and .rpm

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggers

env:
  APPIMAGE_URL: https://downloader.cursor.sh/linux/appImage/x64

jobs:
  check_and_convert:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget fakeroot alien

    - name: Download Latest Cursor
      run: |
        export FILENAME=$(curl -sJw '%{filename_effective}' -O $APPIMAGE_URL) && export FILENAMENOEXT="${FILENAME%.*}"
        echo "FILENAME=$FILENAME" >> $GITHUB_ENV
        echo "FILENAMENOEXT=$FILENAMENOEXT" >> $GITHUB_ENV

    - name: Make AppImage executable
      run: chmod +x ${{ env.FILENAME }}

    - name: Extract AppImage and get version
      run: |
        ./${{ env.FILENAME }} --appimage-extract
        export APP_VERSION==$(echo ${{ env.FILENAMENOEXT }} | sed -E 's/.*-([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        echo $APP_VERSION
        echo "APP_VERSION=$APP_VERSION=" >> $GITHUB_ENV

    - name: Create .deb package
      run: |
        mkdir -p ./deb_package/DEBIAN
        mkdir -p ./deb_package/usr/bin
        mkdir -p ./deb_package/usr/share/applications
        cp squashfs-root/AppRun ./deb_package/usr/bin/cursor
        sed -i 's|Exec=/opt/cursor\.appimage|Exec=/usr/bin/cursor|g' squashfs-root/cursor.desktop
        cp squashfs-root/cursor.desktop ./deb_package/usr/share/applications/
        cp -r squashfs-root/usr ./deb_package/
        cat > ./deb_package/DEBIAN/control << EOL
        Package: cursor
        Version: ${{ env.APP_VERSION }}
        Section: base
        Priority: optional
        Architecture: amd64
        Maintainer: Echo-Head-Wall echo@magicalmeowmeow.moe
        Description: ${{ env.FILENAME }}
         This is a converted AppImage of ${{ env.FILENAME }}. Because app images make my soul hurt
        EOL
        
        dpkg-deb --build deb_package
        mv deb_package.deb ${{ env.FILENAMENOEXT }}.deb

    - name: Create .rpm package
      run: |
        alien -r --scripts ${{ env.FILENAMENOEXT }}.deb
        mv *.rpm ${{ env.FILENAMENOEXT }}.rpm

    - name: Upload .deb artifact
      uses: actions/upload-artifact@v3
      with:
        name: deb-package
        path: ${{ env.FILENAMENOEXT }}.deb

    - name: Upload .rpm artifact
      uses: actions/upload-artifact@v3
      with:
        name: rpm-package
        path: ${{ env.FILENAMENOEXT }}.rpm
